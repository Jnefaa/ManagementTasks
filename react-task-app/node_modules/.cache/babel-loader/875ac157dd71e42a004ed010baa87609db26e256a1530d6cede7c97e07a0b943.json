{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chayma Ouerghi\\\\Downloads\\\\ManagementTasks-main\\\\react-task-app\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport socket from \"../socket\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    // Charger les tâches au démarrage\n    axios.get(\"http://localhost:5000/tasks\", {\n      withCredentials: true\n    }).then(res => setTasks(res.data)).catch(err => console.error(err));\n\n    // Écouter les événements Socket.io\n    socket.on(\"taskNotification\", data => {\n      console.log(\"Nouvelle notification :\", data);\n      if (data.type === \"new\") setTasks(prev => [...prev, data.task]);else if (data.type === \"update\") setTasks(prev => prev.map(task => task._id === data.task._id ? data.task : task));else if (data.type === \"delete\") setTasks(prev => prev.filter(task => task._id !== data.taskId));\n    });\n    return () => {\n      socket.off(\"taskNotification\");\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Liste des t\\xE2ches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.title, \" - \", task.status]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","socket","axios","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","get","withCredentials","then","res","data","catch","err","console","error","on","log","type","prev","task","map","_id","filter","taskId","off","children","fileName","_jsxFileName","lineNumber","columnNumber","title","status","_c","$RefreshReg$"],"sources":["C:/Users/Chayma Ouerghi/Downloads/ManagementTasks-main/react-task-app/src/components/TaskList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport socket from \"../socket\";\nimport axios from \"axios\";\n\nconst TaskList = () => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    // Charger les tâches au démarrage\n    axios.get(\"http://localhost:5000/tasks\", { withCredentials: true })\n      .then((res) => setTasks(res.data))\n      .catch((err) => console.error(err));\n\n    // Écouter les événements Socket.io\n    socket.on(\"taskNotification\", (data) => {\n      console.log(\"Nouvelle notification :\", data);\n      if (data.type === \"new\") setTasks((prev) => [...prev, data.task]);\n      else if (data.type === \"update\") setTasks((prev) => prev.map(task => task._id === data.task._id ? data.task : task));\n      else if (data.type === \"delete\") setTasks((prev) => prev.filter(task => task._id !== data.taskId));\n    });\n\n    return () => {\n      socket.off(\"taskNotification\");\n    };\n  }, []);\n\n  return (\n    <div>\n      <h2>Liste des tâches</h2>\n      <ul>\n        {tasks.map((task) => (\n          <li key={task._id}>{task.title} - {task.status}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACAG,KAAK,CAACO,GAAG,CAAC,6BAA6B,EAAE;MAAEC,eAAe,EAAE;IAAK,CAAC,CAAC,CAChEC,IAAI,CAAEC,GAAG,IAAKJ,QAAQ,CAACI,GAAG,CAACC,IAAI,CAAC,CAAC,CACjCC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;;IAErC;IACAd,MAAM,CAACiB,EAAE,CAAC,kBAAkB,EAAGL,IAAI,IAAK;MACtCG,OAAO,CAACG,GAAG,CAAC,yBAAyB,EAAEN,IAAI,CAAC;MAC5C,IAAIA,IAAI,CAACO,IAAI,KAAK,KAAK,EAAEZ,QAAQ,CAAEa,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAER,IAAI,CAACS,IAAI,CAAC,CAAC,CAAC,KAC7D,IAAIT,IAAI,CAACO,IAAI,KAAK,QAAQ,EAAEZ,QAAQ,CAAEa,IAAI,IAAKA,IAAI,CAACE,GAAG,CAACD,IAAI,IAAIA,IAAI,CAACE,GAAG,KAAKX,IAAI,CAACS,IAAI,CAACE,GAAG,GAAGX,IAAI,CAACS,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC,KAChH,IAAIT,IAAI,CAACO,IAAI,KAAK,QAAQ,EAAEZ,QAAQ,CAAEa,IAAI,IAAKA,IAAI,CAACI,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACE,GAAG,KAAKX,IAAI,CAACa,MAAM,CAAC,CAAC;IACpG,CAAC,CAAC;IAEF,OAAO,MAAM;MACXzB,MAAM,CAAC0B,GAAG,CAAC,kBAAkB,CAAC;IAChC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzB5B,OAAA;MAAAwB,QAAA,EACGrB,KAAK,CAACgB,GAAG,CAAED,IAAI,iBACdlB,OAAA;QAAAwB,QAAA,GAAoBN,IAAI,CAACW,KAAK,EAAC,KAAG,EAACX,IAAI,CAACY,MAAM;MAAA,GAArCZ,IAAI,CAACE,GAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CACpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAhCID,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}